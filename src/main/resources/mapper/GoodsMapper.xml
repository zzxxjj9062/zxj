<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.abovesky.shopping.dao.GoodsMapper" >
    <resultMap id="BaseResultMap" type="cn.abovesky.shopping.domain.Goods" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="REAL" />
        <result column="number" property="number" jdbcType="INTEGER" />
        <result column="image" property="image" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="insert_date" property="insertDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="CHAR" />
        <result column="merchant_id" property="merchantId" jdbcType="INTEGER" />
        <result column="goods_type" property="goodsType" jdbcType="INTEGER" />
        <result column="sale_count" property="saleCount" jdbcType="INTEGER" />
        <result column="remark_count" property="remarkCount" jdbcType="INTEGER" />
        <result column="collection_count" property="collectionCount" jdbcType="INTEGER"/>
        <association property="goodsTypeObj" javaType="cn.abovesky.shopping.domain.GoodsType">
            <id column="type_id" property="id"/>
            <result column="type_name" property="name"/>
        </association>
        <association property="merchant" javaType="cn.abovesky.shopping.domain.Merchant">
            <id column="merchant_id" property="id"/>
            <result column="store_name" property="storeName"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List" >
        id, name, price, number, image, description, insert_date, update_date, status, merchant_id,
        goods_type, sale_count, remark_count, collection_count
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.abovesky.shopping.domain.Goods" >
        insert into goods (id, name, price,
        number, image, description,
        insert_date, update_date, status,
        merchant_id, goods_type, sale_count,
        remark_count, collection_count)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL},
        #{number,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{insertDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR},
        #{merchantId,jdbcType=INTEGER}, #{goodsType,jdbcType=INTEGER}, #{saleCount,jdbcType=INTEGER},
        #{remarkCount,jdbcType=INTEGER}, #{collectionCount,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.abovesky.shopping.domain.Goods" >
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="number != null" >
                number,
            </if>
            <if test="image != null" >
                image,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="insertDate != null" >
                insert_date,
            </if>
            <if test="updateDate != null" >
                update_date,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="merchantId != null" >
                merchant_id,
            </if>
            <if test="goodsType != null" >
                goods_type,
            </if>
            <if test="saleCount != null" >
                sale_count,
            </if>
            <if test="remarkCount != null" >
                remark_count,
            </if>
            <if test="collectionCount != null" >
                collection_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                #{price,jdbcType=REAL},
            </if>
            <if test="number != null" >
                #{number,jdbcType=INTEGER},
            </if>
            <if test="image != null" >
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="insertDate != null" >
                #{insertDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null" >
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=CHAR},
            </if>
            <if test="merchantId != null" >
                #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="goodsType != null" >
                #{goodsType,jdbcType=INTEGER},
            </if>
            <if test="saleCount != null" >
                #{saleCount,jdbcType=INTEGER},
            </if>
            <if test="remarkCount != null" >
                #{remarkCount,jdbcType=INTEGER},
            </if>
            <if test="collectionCount != null" >
                #{collectionCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.abovesky.shopping.domain.Goods" >
        update goods
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=REAL},
            </if>
            <if test="number != null" >
                number = #{number,jdbcType=INTEGER},
            </if>
            <if test="image != null" >
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="insertDate != null" >
                insert_date = #{insertDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null" >
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="merchantId != null" >
                merchant_id = #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="goodsType != null" >
                goods_type = #{goodsType,jdbcType=INTEGER},
            </if>
            <if test="saleCount != null" >
                sale_count = #{saleCount,jdbcType=INTEGER},
            </if>
            <if test="remarkCount != null" >
                remark_count = #{remarkCount,jdbcType=INTEGER},
            </if>
            <if test="collectionCount != null" >
                collection_count = #{collectionCount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.abovesky.shopping.domain.Goods" >
    update goods
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      number = #{number,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      insert_date = #{insertDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      merchant_id = #{merchantId,jdbcType=INTEGER},
      goods_type = #{goodsType,jdbcType=INTEGER},
      sale_count = #{saleCount,jdbcType=INTEGER},
      remark_count = #{remarkCount,jdbcType=INTEGER},
      collection_count = #{collectionCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="findPageBreakByCondition" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <if test="merchantId == null or merchantId == 0">
            merchant.store_name store_name,
        </if>
        goods_type.name type_name, goods_type.id type_id, goods.id, goods.name, goods.price, goods.number,
        goods.image, goods.description, goods.insert_date, goods.update_date, goods.status,
        goods.merchant_id, goods.goods_type, goods.sale_count, goods.remark_count, goods.collection_count
        from goods
        inner join goods_type
          on (goods.goods_type = goods_type.id AND goods_type.status = 'ACTIVE')
        <if test="merchantId == null or merchantId == 0">
            inner join merchant on (merchant.id = goods.merchant_id and merchant.status = 'ACTIVE')
        </if>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="merchantId != null and merchantId != 0">
                AND merchant_id = #{merchantId}
            </if>
            <choose>
                <when test="status == null">
                    AND goods.status = 'ACTIVE'
                </when>
                <when test="status == 'ALL'">
                    AND goods.status != 'DELETED'
                </when>
                <otherwise>
                    AND goods.status = #{status}
                </otherwise>
            </choose>
            <if test="startDate != null">
                AND update_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND update_date &lt;= #{endDate}
            </if>
            <if test="type != null">
                AND goods.goods_type = #{type}
            </if>
            <if test="keywords != null">
                AND goods.name LIKE "%"#{keywords}"%"
            </if>
            <if test="merchantId == null or merchantId == 0">
                <if test="keywords2 != null">
                    AND merchant.store_name LIKE "%"#{keywords2}"%"
                </if>
            </if>
        </trim>
        <choose>
            <when test="orderField !=null and orderField !=''">
                ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                order by insert_date DESC
            </otherwise>
        </choose>
    </select>
    <select id="getTotalCount" resultType="int" parameterType="map">
        SELECT
          count(0)
        from goods
        inner join goods_type
        on (goods.goods_type = goods_type.id AND goods_type.status = 'ACTIVE')
        <if test="merchantId == null or merchantId == 0">
            inner join merchant on (merchant.id = goods.merchant_id and merchant.status = 'ACTIVE')
        </if>
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="merchantId != null and merchantId != 0">
                AND merchant_id = #{merchantId}
            </if>
            <choose>
                <when test="status == null">
                    AND goods.status = 'ACTIVE'
                </when>
                <when test="status == 'ALL'">
                    AND goods.status != 'DELETED'
                </when>
                <otherwise>
                    AND goods.status = #{status}
                </otherwise>
            </choose>
            <if test="startDate != null">
                AND update_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND update_date &lt;= #{endDate}
            </if>
            <if test="type != null">
                AND goods.goods_type = #{type}
            </if>
            <if test="keywords != null">
                AND goods.name LIKE "%"#{keywords}"%"
            </if>
            <if test="merchantId == null or merchantId == 0">
                <if test="keywords2 != null">
                    AND merchant.store_name LIKE "%"#{keywords2}"%"
                </if>
            </if>
        </trim>
    </select>
    <update id="deleteByIds" parameterType="java.lang.Integer">
        update goods set status = 'DELETED' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="up" parameterType="java.lang.Integer">
        update goods set status = 'ACTIVE' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="down" parameterType="java.lang.Integer">
        update goods set status = 'INACTIVE' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="findNameAndNumberById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select name, number
        from goods
        where id = #{id} and status = 'ACTIVE'
    </select>
    <update id="addSaleCount" parameterType="map">
        update goods set sale_count = sale_count + #{saleCount} where id = #{id}
    </update>
    <update id="addNumber" parameterType="map">
        update goods set number = number + #{number} where id = #{id}
    </update>
    <update id="addRemarkCount" parameterType="java.lang.Integer">
        update goods set remark_count = remark_count + 1 where id = #{id}
    </update>
    <select id="findByMerchantId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id, name
        from goods
        where merchant_id = #{merchantId} and status in ('ACTIVE', 'INACTIVE')
        order by update_date desc
    </select>
    <select id="getDetailById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
            goods_type.name type_name, goods_type.id type_id, goods.id, goods.name, goods.price, goods.number,
            goods.image, goods.description, goods.insert_date, goods.update_date, goods.status,
            goods.merchant_id, goods.goods_type, goods.sale_count, goods.remark_count, merchant.store_name, goods.collection_count
        from goods
        inner join goods_type on (goods.goods_type = goods_type.id AND goods_type.status = 'ACTIVE')
        inner join merchant on goods.merchant_id = merchant.id
        where goods.id = #{id}
    </select>
    <update id="addCollectionCount" parameterType="java.lang.Integer">
        update goods set collection_count = collection_count + 1
        where id = #{id}
    </update>
    <update id="subCollectionCount" parameterType="java.lang.Integer">
        update goods set collection_count = collection_count - 1
        where id = #{id}
    </update>
    <update id="subRemarkCount" parameterType="java.lang.Integer">
        update goods set remark_count = remark_count - 1
        where id = #{id}
    </update>
    <select id="findAll" resultMap="BaseResultMap">
        select id, name
        from goods
        where status in ('ACTIVE', 'INACTIVE')
        order by update_date desc
    </select>
</mapper>