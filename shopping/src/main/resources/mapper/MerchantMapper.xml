<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.abovesky.shopping.dao.MerchantMapper" >
    <resultMap id="BaseResultMap" type="cn.abovesky.shopping.domain.Merchant" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="store_name" property="storeName" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="CHAR" />
        <result column="sale_count" property="saleCount" jdbcType="INTEGER" />
        <result column="insert_date" property="insertDate" jdbcType="TIMESTAMP" />
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="identity_card" property="identityCard" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="image" property="image" jdbcType="VARCHAR" />
        <result column="collection_count" property="collectionCount" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, username, password, store_name, description, phone, address, status, sale_count,
        insert_date, update_date, identity_card, real_name, image, collection_count
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from merchant
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from merchant
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.abovesky.shopping.domain.Merchant" >
        insert into merchant (id, username, password,
        store_name, description, phone,
        address, status, sale_count,
        insert_date, update_date, identity_card,
        real_name, image, collection_count)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{storeName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{saleCount,jdbcType=INTEGER},
        #{insertDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{identityCard,jdbcType=VARCHAR},
        #{realName,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{collectionCount,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.abovesky.shopping.domain.Merchant" >
        insert into merchant
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="storeName != null" >
                store_name,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="address != null" >
                address,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="saleCount != null" >
                sale_count,
            </if>
            <if test="insertDate != null" >
                insert_date,
            </if>
            <if test="updateDate != null" >
                update_date,
            </if>
            <if test="identityCard != null" >
                identity_card,
            </if>
            <if test="realName != null" >
                real_name,
            </if>
            <if test="image != null" >
                image,
            </if>
            <if test="collectionCount != null" >
                collection_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null" >
                #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=CHAR},
            </if>
            <if test="saleCount != null" >
                #{saleCount,jdbcType=INTEGER},
            </if>
            <if test="insertDate != null" >
                #{insertDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null" >
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="identityCard != null" >
                #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="image != null" >
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="collectionCount != null" >
                #{collectionCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.abovesky.shopping.domain.Merchant" >
        update merchant
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="storeName != null" >
                store_name = #{storeName,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="saleCount != null" >
                sale_count = #{saleCount,jdbcType=INTEGER},
            </if>
            <if test="insertDate != null" >
                insert_date = #{insertDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null" >
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="identityCard != null" >
                identity_card = #{identityCard,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="image != null" >
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="collectionCount != null" >
                collection_count = #{collectionCount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.abovesky.shopping.domain.Merchant" >
    update merchant
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      sale_count = #{saleCount,jdbcType=INTEGER},
      insert_date = #{insertDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      collection_count = #{collectionCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="isUniqueUsername" resultType="java.lang.Integer" parameterType="java.lang.String">
        select count(0) as c
        from merchant where username = #{username} and status !='DELETED'
    </select>
    <select id="findByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from merchant
        where username = #{username} and status = 'ACTIVE'
    </select>
    <select id="findPageBreakByCondition" resultMap="BaseResultMap" parameterType="map">
        SELECT
        id, store_name, description, phone, address, sale_count, image, collection_count, username, status, insert_date, update_date
        from merchant
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <choose>
                <when test="status == null">
                    AND status = 'ACTIVE'
                </when>
                <when test="status == 'ALL'.toString()">
                    AND status != 'DELETED'
                </when>
                <otherwise>
                    AND status = #{status}
                </otherwise>
            </choose>
            <if test="startDate != null">
                AND update_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND update_date &lt;= #{endDate}
            </if>
            <if test="keywords != null">
                AND store_name LIKE "%"#{keywords}"%"
            </if>
            <if test="keywords2 != null">
                AND username LIKE "%"#{keywords2}"%"
            </if>
        </trim>
        <choose>
            <when test="orderField !=null and orderField !=''">
                ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
            </when>
            <otherwise>
                order by sale_count DESC
            </otherwise>
        </choose>
    </select>
    <update id="addSaleCount" parameterType="map">
      update merchant set sale_count = sale_count + #{saleCount} where id = #{id}
    </update>
    <update id="addCollectionCount" parameterType="java.lang.Integer">
        update merchant set collection_count = collection_count + 1 where id = #{id}
    </update>
    <update id="subCollectionCount" parameterType="java.lang.Integer">
        update merchant set collection_count = collection_count - 1 where id = #{id}
    </update>
    <select id="getCollectionCountById" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select collection_count
        from merchant
        where id = #{id}
    </select>
    <select id="getImageById" resultType="java.lang.String" parameterType="java.lang.Integer">
        select image
        from merchant
        where id = #{id}
    </select>
    <select id="findAll" resultMap="BaseResultMap">
        select id, store_name
        from merchant
        where status = 'ACTIVE'
        order by update_date desc
    </select>
    <update id="active" parameterType="java.lang.Integer">
        update merchant set status = 'ACTIVE' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="inactive" parameterType="java.lang.Integer">
        update merchant set status = 'INACTIVE' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>