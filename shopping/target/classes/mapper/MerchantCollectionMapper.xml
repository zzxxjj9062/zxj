<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.abovesky.shopping.dao.MerchantCollectionMapper" >
  <resultMap id="BaseResultMap" type="cn.abovesky.shopping.domain.MerchantCollection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="merchant_id" property="merchantId" jdbcType="INTEGER" />
      <association property="merchant" javaType="cn.abovesky.shopping.domain.Merchant">
          <id column="merchantId" property="id" jdbcType="INTEGER"/>
          <result column="merchant_store_name" property="storeName" jdbcType="VARCHAR" />
          <result column="merchant_image" property="image" jdbcType="VARCHAR" />
          <result column="merchant_sale_count" property="saleCount" jdbcType="INTEGER" />
          <result column="merchant_collection_count" property="collectionCount" jdbcType="INTEGER" />
      </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, merchant_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from merchant_collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from merchant_collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.abovesky.shopping.domain.MerchantCollection" >
    insert into merchant_collection (id, user_id, merchant_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{merchantId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.abovesky.shopping.domain.MerchantCollection" >
    insert into merchant_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.abovesky.shopping.domain.MerchantCollection" >
    update merchant_collection
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.abovesky.shopping.domain.MerchantCollection" >
    update merchant_collection
    set user_id = #{userId,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="countByUserIdAndMerchantId" resultType="java.lang.Integer" parameterType="cn.abovesky.shopping.domain.MerchantCollection">
        select count(0)
        from merchant_collection
        where user_id = #{userId} and merchant_id = #{merchantId}
    </select>
    <delete id="cancel" parameterType="java.lang.Integer">
        delete from merchant_collection
        where user_id = #{userId} and merchant_id = #{merchantId}
    </delete>
    <select id="findPageBreakByCondition" resultMap="BaseResultMap" parameterType="map">
        select
            merchant_collection.id id,
            merchant_collection.user_id user_id,
            merchant.id merchantId,
            merchant.store_name merchant_store_name,
            merchant.image merchant_image,
            merchant.sale_count merchant_sale_count,
            merchant.collection_count merchant_collection_count
        from merchant_collection
        inner join merchant on merchant_collection.merchant_id = merchant.id
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            and merchant.status = 'ACTIVE'
            <if test="userId != null">
                and merchant_collection.user_id = #{userId}
            </if>
        </trim>
        order by merchant_collection.id desc
    </select>
</mapper>